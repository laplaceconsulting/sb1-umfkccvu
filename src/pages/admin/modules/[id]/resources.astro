---
import Layout from '../../../../layouts/Layout.astro';
import { supabase } from '../../../../lib/supabase';

const { id } = Astro.params;

// Verificar se o usuário é admin
const { data: { user } } = await supabase.auth.getUser();
if (!user) {
  return Astro.redirect('/login');
}

const { data: profile } = await supabase
  .from('profiles')
  .select('role')
  .eq('id', user.id)
  .single();

if (profile?.role !== 'admin') {
  return Astro.redirect('/');
}

// Buscar dados do módulo e seus recursos
const { data: module } = await supabase
  .from('modules')
  .select('*')
  .eq('id', id)
  .single();

if (!module) {
  return Astro.redirect('/admin/modules');
}

// Handle form submissions
let errorMessage = '';
let successMessage = '';

if (Astro.request.method === 'POST') {
  try {
    const formData = await Astro.request.formData();
    const action = formData.get('action')?.toString();

    if (action === 'delete') {
      const resourceId = formData.get('resourceId')?.toString();
      if (resourceId) {
        const { error } = await supabase
          .from('resources')
          .delete()
          .eq('id', resourceId);

        if (error) throw error;
        successMessage = 'Recurso excluído com sucesso';
      }
    } else {
      // Add new resource
      const title = formData.get('title')?.toString().trim();
      const url = formData.get('url')?.toString().trim();
      const resourceType = parseInt(formData.get('resource_type')?.toString() || '1');

      if (!title || !url) {
        errorMessage = 'Título e URL são obrigatórios';
      } else {
        const { error } = await supabase
          .from('resources')
          .insert({
            module_id: id,
            title,
            url,
            resource_type: resourceType
          });

        if (error) throw error;
        successMessage = 'Recurso adicionado com sucesso';
      }
    }
  } catch (err) {
    console.error('Error:', err);
    errorMessage = 'Erro ao processar sua solicitação';
  }
}

// Fetch resources after any modifications
const { data: resources } = await supabase
  .from('resources')
  .select('*')
  .eq('module_id', id)
  .order('created_at');

const resourceTypes = {
  1: 'Material Complementar',
  2: 'Exercícios',
  3: 'Links Úteis'
};
---

<Layout title="Gerenciar Recursos | Admin">
  <main class="max-w-3xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="mb-8">
      <a href="/admin/modules" class="inline-flex items-center text-blue-600 hover:text-blue-800">
        <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 19l-7-7m0 0l7-7m-7 7h18" />
        </svg>
        Voltar para Lista de Módulos
      </a>
    </div>

    <div class="bg-white shadow-md rounded-lg">
      <div class="px-4 py-5 sm:p-6">
        <h1 class="text-2xl font-bold text-gray-900 mb-2">Recursos do Módulo</h1>
        <p class="text-gray-600 mb-6">{module.title}</p>

        {errorMessage && (
          <div class="mb-4 p-4 bg-red-50 border border-red-200 text-red-600 rounded-md">
            {errorMessage}
          </div>
        )}

        {successMessage && (
          <div class="mb-4 p-4 bg-green-50 border border-green-200 text-green-600 rounded-md">
            {successMessage}
          </div>
        )}

        <div class="mb-8">
          <h2 class="text-lg font-medium text-gray-900 mb-4">Adicionar Novo Recurso</h2>
          <form method="POST" class="space-y-4">
            <div>
              <label for="title" class="block text-sm font-medium text-gray-700">
                Título
              </label>
              <input
                type="text"
                name="title"
                id="title"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              />
            </div>

            <div>
              <label for="url" class="block text-sm font-medium text-gray-700">
                URL
              </label>
              <input
                type="url"
                name="url"
                id="url"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              />
            </div>

            <div>
              <label for="resource_type" class="block text-sm font-medium text-gray-700">
                Tipo de Recurso
              </label>
              <select
                name="resource_type"
                id="resource_type"
                required
                class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
              >
                <option value="1">Material Complementar</option>
                <option value="2">Exercícios</option>
                <option value="3">Links Úteis</option>
              </select>
            </div>

            <div class="flex justify-end">
              <button
                type="submit"
                class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
              >
                Adicionar Recurso
              </button>
            </div>
          </form>
        </div>

        <div>
          <h2 class="text-lg font-medium text-gray-900 mb-4">Recursos Existentes</h2>
          <div class="space-y-4">
            {resources?.map((resource) => (
              <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
                <div>
                  <h3 class="text-sm font-medium text-gray-900">{resource.title}</h3>
                  <p class="text-sm text-gray-500">{resourceTypes[resource.resource_type]}</p>
                  <a href={resource.url} target="_blank" rel="noopener noreferrer" class="text-sm text-blue-600 hover:text-blue-800">
                    {resource.url}
                  </a>
                </div>
                <form method="POST">
                  <input type="hidden" name="action" value="delete" />
                  <input type="hidden" name="resourceId" value={resource.id} />
                  <button
                    type="submit"
                    class="text-red-600 hover:text-red-900"
                    onclick="return confirm('Tem certeza que deseja excluir este recurso?')"
                  >
                    Excluir
                  </button>
                </form>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>